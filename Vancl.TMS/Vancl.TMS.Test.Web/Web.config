<?xml version="1.0"?>
<configuration>
  <appSettings>
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--log日志-->
    <add key="FactoryLog" value="default_Log" />
    <!--logemail日志-->
    <add key="FactoryEMail" value="default_EMail" />
    <!--数据库连接池最大线程数-->
    <add key="ConnectionPoolMaxCount" value="20" />
    <!--要写入操作日志的Model名-->
    <add key="WriteIntoOperateLogModels" value="CarriersModel,InterCityLineModel" />
    <!--要写入DeliveryLog日志的Model名-->
    <add key="WriteIntoDeliveryLogModels" value="DeliveryOrderModel,LostModel" />
    <!--服务路径-->
    <add key="ServerPath" value="server" />
    <!--服务配置文件路径-->
    <add key="ServiceConfigPath" value="serviceConfig\ServiceConfig.xml" />
    <!--清空池的执行间隔时间(毫秒)-->
    <add key="PoolClearInterval" value="2000" />
    <!--清空池的过期时间(毫秒),最后一次使用到现在超过该时长则清掉-->
    <add key="PoolClearTimeSpan" value="5000" />
    <!--socket等待队列中的最大允许数量-->
    <add key="SocketWaitingQueueMaxCount" value="5" />
    <!--socket排队等待超时时间-->
    <add key="SocketWaitingTimeOut" value="500" />
    <!--socket池最大socket数-->
    <add key="SocketPoolMaxCount" value="5" />
  </appSettings>
  <connectionStrings/>
  <system.web>
    <compilation debug="true" targetFramework="4.0"/>
    <!--
            通过 <authentication> 节可以配置
            安全身份验证模式，ASP.NET 
            使用该模式来识别来访用户身份。 
        -->
    <authentication mode="Windows"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节
            可以配置相应的处理步骤。具体而言，
            开发人员通过该节可配置要显示的 html 错误页，
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <!-- 
        system.webServer 节是在 Internet Information Services 7.0 下运行 ASP.NET AJAX
        所必需的。对早期版本的 IIS 来说则不需要此节。
    -->
</configuration>