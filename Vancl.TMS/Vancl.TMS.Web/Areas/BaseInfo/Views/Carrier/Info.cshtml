@using Vancl.TMS.Web.WebControls.Mvc;
@model Vancl.TMS.Web.Areas.BaseInfo.Models.CarrierViewModel
@{
    var IsCreate = ViewContext.RouteData.Values["action"].ToString() == "Create";
    ViewBag.Title = (IsCreate ? "新增" : "查看") + "承运商";
    Layout = "~/Views/Shared/_Layout_Frame.cshtml";

    if (ViewBag.CoverageCityIDs == null) { ViewBag.CoverageCityIDs = ""; }
    if (ViewBag.CoverageCityNames == null) { ViewBag.CoverageCityNames = ""; }
}
@section header{
    <script id="DelayCriteriaTemplate" type="text/x-jquery-tmpl">
        {{if EndRegion}}
            <li>延误时长从${StartRegion} 到${EndRegion}小时，折扣${Discount} </li>
        {{else}}
            <li>延误时长大于${StartRegion}小时，折扣${Discount} </li>
        {{/if}}
    </script>
    <link href="@Url.Content("~/Scripts/plugins/zTree/css/zTreeStyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/lib/json2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/references/jquery.tmpl.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/references/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/references/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/references/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/calendar/WdatePicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/zTree/js/jquery.ztree.all-3.1.min.js")" type="text/javascript"></script>
    <script type="text/javascript">

        //设置延误考核标准
        function setDelayCriteria() {
            var strDelayCriteria = $.trim($("#hidDelayCriteria").val());
            top.DelayCriteriaList = null;
            if (strDelayCriteria == "null") {
                strDelayCriteria = ""
            }
            else {
                top.DelayCriteriaList = JSON.parse(strDelayCriteria);
            }

            ymPrompt.win({ title: '设置延误考核标准',
                message: '@Url.Action("SetDelayCriteria")?Operate=edit&Param=DelayCriteriaList', iframe: true,
                width: 800, height: 310,
                handler: function (tp, data) {
                    if (tp == "Add") {
                        var strData = JSON.stringify(data);
                        $("#hidDelayCriteria").val(strData);
                        showDelayCriteriaList();
                    }
                }
            })
        }

        //显示延误考核列表
        function showDelayCriteriaList() {
            $("#DelayCriteriaList ul").empty();
            var strDelayCriteria = $.trim($("#hidDelayCriteria").val());
            if (strDelayCriteria != "" && strDelayCriteria != "null") {
                var list = JSON.parse(strDelayCriteria);
                $("#DelayCriteriaTemplate").tmpl(list).appendTo("#DelayCriteriaList ul");
            }
        }

        $(function () {
            showDelayCriteriaList();
        });        
        
    </script>
    <script type="text/javascript">
        var setting = {
            check: {
                enable: true,
                chkboxType: { "Y" : "ps", "N" : "ps"}
            },
            view: {
                dblClickExpand: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onCheck: onCheck
            }
        };

        var cityNodes = @Html.Action("GetAdministrationTreeJson");

        function beforeClick(treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("SelCityTree");
            zTree.checkNode(treeNode, !treeNode.checked, null, true);
            return false;
        }

        function onCheck(e, treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("SelCityTree");
			var nodes = zTree.getCheckedNodes(true);
			var ids="";
            var v = "";
            for (var i = 0, l = nodes.length; i < l; i++) {
                if(!nodes[i].isParent){
                    if(nodes[i].id.indexOf("city_")==0){
                        ids += nodes[i].id.split('_')[1] + ",";
                        v += nodes[i].name + ",";
                    }
                }
            }
            if (v.length > 0) v = v.substring(0, v.length - 1);
            $("#citySel").val(v);
            $("#hidCoverageCityIDs").val(ids);
        }

        function showMenu() {
            var cityObj = $("#citySel");
            var cityOffset = $("#citySel").offset();
            $("#popSelCityTree").css({ left: cityOffset.left + "px", top: cityOffset.top + cityObj.outerHeight() + "px" }).slideDown("fast");

            $("body").bind("mousedown", onBodyDown);
        }
        function hideMenu() {
            $("#popSelCityTree").fadeOut("fast");
            $("body").unbind("mousedown", onBodyDown);
        }
        function onBodyDown(event) {
            if (!(event.target.id == "menuBtn" || event.target.id == "citySel" || event.target.id == "popSelCityTree" || $(event.target).parents("#popSelCityTree").length > 0)) {
                hideMenu();
            }
        }

        $(document).ready(function () {
            $.fn.zTree.init($("#SelCityTree"), setting,cityNodes);
            var ids = $("#hidCoverageCityIDs").val().split(",");
            var treeObj = $.fn.zTree.getZTreeObj("SelCityTree");
            var nodes = treeObj.transformToArray(treeObj.getNodes());
            for (var i=0, l=nodes.length; i < l; i++) {
                for(var j=0;j<ids.length;j++){
                    if(nodes[i].id== "city_"+ids[j]){
	                    treeObj.checkNode(nodes[i], true, true);
                        continue;
                    }
                }
            }

            $("#IsAllCoverage").change(function(){
                if($(this).attr("checked")){
                    $("#citySel,#popSelCityTree").hide();
                }
                else{
                    $("#citySel").show();
                }
            }).change();
        });
    </script>
}
@using (Html.BeginForm())
{
    <table class=" tb_insert">
        <thead>
            <tr>
                <th colspan="2">
                    @Html.HiddenFor(model => model.CarrierID)
                    @Html.HiddenFor(model => model.CarrierNo)
                    @Html.ValidationSummary(true)
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.CarrierName)
                </th>
                <td>
                    @Html.TextBoxFor(model => model.CarrierName)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.CarrierName)
                </td>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.CarrierAllName)
                </th>
                <td>
                    @Html.TextBoxFor(model => model.CarrierAllName)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.CarrierAllName)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Contacter)
                </th>
                <td>
                    @Html.EditorFor(model => model.Contacter)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.Contacter)
                </td>
                <th>
                    @Html.Label("", "适用范围")
                </th>
                <td style="">
                    <input id="citySel" type="text" readonly="readonly" value="@ViewBag.CoverageCityNames" onclick="showMenu();" class="hide" />
                    <input id="hidCoverageCityIDs" name="CoverageCityIDs" type="hidden" value="@ViewBag.CoverageCityIDs" />
                    <div id="popSelCityTree" class="popSelCityTree" style="display: none; position: absolute;
                        width: 220px; height: 300px; overflow: auto; background: #fff; border: 1px solid #ddd;">
                        <ul id="SelCityTree" class="ztree" style="margin-top: 0;">
                        </ul>
                    </div>
                    @Html.CheckBoxFor(model => model.IsAllCoverage)
                    @Html.LabelFor(model => model.IsAllCoverage)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Phone)
                </th>
                <td>
                    @Html.EditorFor(model => model.Phone)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.Phone)
                </td>
                <th>
                    @Html.LabelFor(model => model.Address)
                </th>
                <td>
                    @Html.EditorFor(model => model.Address)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.Address)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Email)
                </th>
                <td>
                    @Html.TextBoxFor(model => model.Email)
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.Email)
                </td>
                <th>
                    @Html.LabelFor(model => model.Status)
                </th>
                <td>
                    @Html.RadioButtonList("Status")
                    @Html.ValidationMessageFor(model => model.Status)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.ExpiredDate)
                </th>
                <td>
                    @Html.TextBoxFor(m => m.BeginDate, "{0:yyyy-MM-dd}", new { @class = "Wdate1", onfocus = "WdatePicker()" })
                    ~
                    @Html.TextBoxFor(m => m.ExpiredDate, "{0:yyyy-MM-dd}", new { @class = "Wdate1", onfocus = "WdatePicker({minDate:'%y-%M-{%d+0}'})" })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.ExpiredDate)
                    @Html.ValidationMessageFor(model => model.BeginDate)
                </td>
                <th>
                    @Html.LabelFor(model => model.ContractNumber)
                </th>
                <td>
                    @Html.TextBoxFor(m => m.ContractNumber)<span style="color: Red">*</span>
                    @Html.ValidationMessageFor(model => model.ContractNumber)
                </td>
            </tr>
            <tr>
                <th>
                    延误考核
                </th>
                <td colspan="3">
                    <a href="javascript:setDelayCriteria(0)">设置延误考核标准</a>
                    <input id="hidDelayCriteria" name="DelayCriteria" type="hidden" value="@Json.Encode(ViewBag.DelayCriteriaList)" />
                    <div id="DelayCriteriaList">
                        <ul>
                        </ul>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    <div class="split">
    </div>
    <div class="center">
        <input type="submit" class="button" value="保存" />
        <input type="button" class="button" value="返回列表" onclick='location="@Url.Action("List")"' />
    </div>
    <div>
    </div>
}