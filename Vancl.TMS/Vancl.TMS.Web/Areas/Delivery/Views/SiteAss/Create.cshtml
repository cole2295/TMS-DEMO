@model Vancl.TMS.Web.Areas.Delivery.Models.SiteAssViewModel
@{
    ViewBag.Title = "录入现场考核数据";
    Layout = "~/Views/Shared/_Layout_Frame.cshtml";
}
@section header{
    <script src="@Url.Content("~/Scripts/lib/json2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/calendar/WdatePicker.js")" type="text/javascript"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/common/TMS.Util.js")"></script>
    <script type="text/javascript">
        $(function () {
            var deliveryNO = Request.QueryString("DeliveryNO");
            var arrivalTime = Request.QueryString("ArrivalTime");
            var leaveTime = Request.QueryString("LeaveTime");
            if (deliveryNO != null && deliveryNO != "") {
                $("#DeliveryNO").val(deliveryNO);
                $("#ArrivalPort").val(arrivalTime);
                $("#LeavePort").val(leaveTime);
            }
        })
        function cancel() {
            ymPrompt.doHandler("cancel", true)
        }
        function checkTimeSpan() {
            var arrivalTime = $("#ArrivalPort").val();
            var leaveTime = $("#LeavePort").val();
            var actureArrivalTime = $("#ArrivalTime").val().trim();
            var actureLeaveTime = $("#LeaveTime").val().trim();
            if (actureArrivalTime != "" && actureLeaveTime != "") {
                var arrArrivalTime = arrivalTime.split(':');
                var arrLeaveTime = leaveTime.split(':');
                var dtActureArrivalTime = new Date(Date.parse(actureArrivalTime.replace(/-/g, "/")));  //actureArrivalTime.split('-').join('/');
                var dtActureLeaveTime = new Date(Date.parse(actureLeaveTime.replace(/-/g, "/")));   //actureLeaveTime.split('-').join('/');
                var dtActureArrivalDay = new Date(dtActureArrivalTime.getYear(), dtActureArrivalTime.getMonth(), dtActureArrivalTime.getDay());     //日期部分
                var dtActureLeaveDay = new Date(dtActureLeaveTime.getYear(), dtActureLeaveTime.getMonth(), dtActureLeaveTime.getDay());         //日期部分
                if (dtActureLeaveDay > dtActureArrivalDay) {//超过一天,不通过
                    SetNoPass();
                }
                else if (dtActureLeaveDay - dtActureArrivalDay == 0) {
                    var ActureArrivalTimeHours = dtActureArrivalTime.getHours();
                    var ActureArrivalTimeMinutes = dtActureArrivalTime.getMinutes();
                    var ActureLeaveTimeHours = dtActureLeaveTime.getHours();
                    var ActureLeaveTimeMinutes = dtActureLeaveTime.getMinutes();
                    if ((ActureArrivalTimeHours - arrArrivalTime[0] > 2)
                            || (ActureArrivalTimeHours - arrArrivalTime[0] == 2 && ActureArrivalTimeMinutes - arrArrivalTime[1] > 0)
                            || (ActureLeaveTimeHours - arrLeaveTime[0] > 2)
                            || (ActureLeaveTimeHours - arrLeaveTime[0] == 2 && ActureLeaveTimeMinutes - arrLeaveTime[1] > 0)) {
                        SetNoPass();
                    }
                    else {
                        SetPass();
                    }
                }
                else {
                    SetNoPass();
                }
            }
        }
        function SetNoPass() {
            $("#AssessmentStatus").next().attr("checked", "checked");
            $("#Reason").attr("disabled", false);
        }
        function SetPass() {
            $("#AssessmentStatus").attr("checked", "checked");
            $("#Reason").attr("disabled", "disabled");
        }
        function Submit() {
            var actureArrivalTime = $("#ArrivalTime").val().trim();
            var actureLeaveTime = $("#LeaveTime").val().trim();
            if (actureArrivalTime == "") {
                alert("请选择实际到库时间！");
                return;
            }
            if (actureLeaveTime == "") {
                alert("请选择实际离库时间！");
                return;
            }
            if (actureLeaveTime <= actureArrivalTime) {
                alert("离库时间必须大于到库时间！");
                return;
            }
            if ($("#AssessmentStatus:checked").val() != "True" && $("#Reason").val().trim() == "") {
                alert("请填写考核不通过原因！");
                return;
            }
            var parms = {};
            parms.ArrivalTime = $("#ArrivalTime").val();
            parms.LeaveTime = $("#LeaveTime").val();
            parms.AssessmentStatus = $("#AssessmentStatus:checked").val() == "True" ? true : false;
            parms.Reason = $("#Reason").val();
            parms.DeliveryNOs = $("#DeliveryNO").val();
            $.ajax({
                url: '@Url.Action("Submit")',
                data: parms,
                dataType: "json",

                success: function (data) {
                    ymPrompt.doHandler("Success", true, data);
                },
                error: function () {
                    ymPrompt.doHandler("Error", true);
                }
            });
        }
    </script>
}
@using (Html.BeginForm())
{
    <table class="tb_insert">
        <thead>
            <tr>
                <th colspan="2">
                    @Html.HiddenFor(model => model.DeliveryNO)
                    @Html.ValidationSummary(true)
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th style="width: 110px;">
                    到库考核点
                </th>
                <td>
                    <input disabled="disabled" id="ArrivalPort" />
                </td>
                <th style="width: 110px;">
                    离库考核点
                </th>
                <td>
                    <input disabled="disabled" id="LeavePort" />
                </td>
            </tr>
            <tr>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.ArrivalTime)
                </th>
                <td>
                    @Html.TextBoxFor(model => model.ArrivalTime, new
                       {
                           @class = "Wdate1",
                           onfocus = "WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})",
                           @readonly = "readonly",
                           onchange = "checkTimeSpan();"
                       })
                    @Html.ValidationMessageFor(model => model.ArrivalTime)
                </td>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.LeaveTime)
                </th>
                <td>
                    @Html.TextBoxFor(model => model.LeaveTime, new
                       {
                           @class = "Wdate1",
                           onfocus = "WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})",
                           @readonly = "readonly",
                           onchange = "checkTimeSpan();"
                       })
                    @Html.ValidationMessageFor(model => model.LeaveTime)
                </td>
            </tr>
            <tr>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.AssessmentStatus)
                </th>
                <td>
                    @Html.RadioButtonFor(model => model.AssessmentStatus, true, new { @checked = "checked", disabled = "disabled" })考核通过
                    @Html.RadioButtonFor(model => model.AssessmentStatus, false, new { disabled = "disabled" })考核不通过
                    @Html.ValidationMessageFor(model => model.AssessmentStatus)
                </td>
                <th style="width: 110px;">
                    @Html.LabelFor(model => model.Reason)
                </th>
                <td>
                    @Html.TextAreaFor(model => model.Reason, 3, 20, new { disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Reason)
                </td>
            </tr>
        </tbody>
    </table>
    <div class="split">
    </div>
    <div class="center">
        <input type="button" class="button" value="提交" onclick="Submit();" />
        <input type="button" class="button" value="取消" onclick='cancel();' />
    </div>
}
